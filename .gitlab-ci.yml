stages:
  - build
  # - test
  # - deploy-s3
  # - post-deploy-s3
  - prepare
  - validate
  - plan

variables:
  API_URL: "https://api.bitpreco.com/btc-brl/ticker"
  TF_ROOT: ${CI_PROJECT_DIR}/environments/production
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/state

build-job:
  image: alpine:3.14
  stage: build
  allow_failure: false
  script:
    - echo "CI_JOB_STAGE Stage e.g. "build" -> $CI_JOB_STAGE"
    - echo "API_URL -> $API_URL"
    - apk add --update curl jq coreutils
    - BITCOIN_PRICE=$(curl --silent "${API_URL}" | jq -r  '.last')
    - mkdir -p output
    - echo "BITCOIN_PRICE -> $BITCOIN_PRICE"
    - |
      echo "{\"name\":\"btc-brl\",\"price\":$BITCOIN_PRICE,\"date\":\"$(date '+%Y-%m-%dT%T.%3NZ')\"}" > output/BITCOIN.json
  after_script:
    - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"
  artifacts:
    expire_in: 5 mins
    paths:
      - output/BITCOIN.json

install-dependencies-job:
  image:
    name: node:18-alpine
    entrypoint: [""]
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_DIR}
    paths:
      - job/node_modules/
  script:
    - cd job
    - yarn install

# test-job-file:
#   image: alpine:3.14
#   stage: test
#   allow_failure: false
#   script:
#     - echo "CI_JOB_STAGE Stage e.g. "test" -> $CI_JOB_STAGE"
#     - cat output/BITCOIN.json
#     - test -f output/BITCOIN.json
#   after_script:
#     - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"

# test-job-node:
#   image:
#     name: node:18-alpine
#     entrypoint: [""]
#   stage: test
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_DIR}
#     paths:
#       - job/node_modules/
#     policy: pull
#   allow_failure: false
#   script:
#     - cd job
#     - yarn run test
#   after_script:
#     - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"

# deploy-s3-job:
#   image:
#     name: amazon/aws-cli:2.6.2
#     entrypoint: [""]
#   stage: deploy-s3
#   allow_failure: false
#   script:
#     - echo "CI_JOB_STAGE Stage e.g. "deploy" -> $CI_JOB_STAGE"
#     - DAY=$(date '+%d')
#     - MONTH=$(date '+%m')
#     - YEAR=$(date '+%Y')
#     - aws s3 cp output/BITCOIN.json s3://$S3_BUCKET_NAME/bitcoin/year=$YEAR/month=$MONTH/day=$DAY/last.json
#   after_script:
#     - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"

# post-deploy-s3-job:
#   image:
#     name: node:18-alpine
#     entrypoint: [""]
#   stage: post-deploy-s3
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_DIR}
#     paths:
#       - job/node_modules/
#     policy: pull
#   allow_failure: false
#   script:
#     - cd job
#     - node main.js
#   after_script:
#     - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"

prepare:
  image:
    name: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: prepare
  cache:
    key: state
    paths:
      - ${TF_ROOT}/.terraform
  allow_failure: false
  script:
    - echo ${TF_HTTP_ADDRESS}
    - echo ${TF_HTTP_USERNAME}
    - echo ${TF_HTTP_RETRY_WAIT_MIN}
    - gitlab-terraform init
  after_script:
    - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"

validate:
  image:
    name: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: validate
  cache:
    key: state
    paths:
      - ${TF_ROOT}/.terraform
  allow_failure: false
  script:
    - gitlab-terraform validate
  after_script:
    - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"

plan:
  image:
    name: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: plan
  cache:
    key: state
    paths:
      - ${TF_ROOT}/.terraform
  allow_failure: false
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json
  after_script:
    - echo "CI_JOB_STATUS -> $CI_JOB_STATUS"
